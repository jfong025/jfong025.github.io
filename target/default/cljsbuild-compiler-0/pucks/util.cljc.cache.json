["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$pucks.util","~:imports",null,"~:requires",["^ ","~$pprint","~$cljs.pprint","~$vec2D","~$pucks.vec2D","~$globals","~$pucks.globals","~$q","~$quil.core","^:","^:","^<","^<","^?","^?","~$clojure.pprint","^:","~$cljs.repl","^A","~$clojure.repl","^A","~$repl","^A","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$pret",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jfong/pucks/src/pucks/util.cljc","~:line",115,"~:column",7,"~:end-line",115,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^P",[["~$v"]]]]],"~:doc","Println and then return value v."],"^5","~$pucks.util/pret","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",11,"~:method-params",["^P",[["~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^P",[null,null]],"^L",1,"~:variadic?",false,"^K",115,"^M",115,"~:max-fixed-arity",1,"~:fn-var",true,"^O",["^P",["^Q",["^P",[["~$v"]]]]],"^R","Println and then return value v."],"~$ms",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",26,"^L",7,"^M",26,"^N",9,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Returns the current time in milliseconds."],"^5","~$pucks.util/ms","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",9,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",26,"~:ret-tag","~$any","^M",26,"^X",0,"^Y",true,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Returns the current time in milliseconds."],"~$direction->rotation",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",57,"^L",7,"^M",57,"^N",26,"^O",["^P",["^Q",["^P",[[["~$x","~$y"]]]]]],"^R","Returns a rotation corresponding to a provided [x y] relative position."],"^5","~$pucks.util/direction->rotation","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",26,"^T",["^P",[["~$p__5265"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",57,"^10",["^4",["^11","~$number"]],"^M",57,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[[["~$x","~$y"]]]]]],"^R","Returns a rotation corresponding to a provided [x y] relative position."],"~$rotation->direction",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",95,"^L",7,"^M",95,"^N",26,"^O",["^P",["^Q",["^P",[["~$theta"]]]]],"^R","Returns an [x y] relative position in the direction of the given rotation."],"^5","~$pucks.util/rotation->direction","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",26,"^T",["^P",[["^17"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",95,"^10","~$cljs.core/IVector","^M",95,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[["^17"]]]]],"^R","Returns an [x y] relative position in the direction of the given rotation."],"~$derelativize-position",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",85,"^L",7,"^M",85,"^N",28,"^O",["^P",["^Q",["^P",[["~$reference-xy","~$agent"]]]]],"^R","Returns agent but with its position augmented by reference-xy."],"^5","~$pucks.util/derelativize-position","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",28,"^T",["^P",[["^1;","^1<"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",85,"^10","^11","^M",85,"^X",2,"^Y",true,"^O",["^P",["^Q",["^P",[["^1;","^1<"]]]]],"^R","Returns agent but with its position augmented by reference-xy."],"~$relative-position->rotation",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",49,"^L",7,"^M",49,"^N",34,"^O",["^P",["^Q",["^P",[[["~$x","~$y"]]]]]],"^R","Returns a rotation corresponding to a provided [x y] relative position."],"^5","~$pucks.util/relative-position->rotation","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",34,"^T",["^P",[["~$p__5261"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",49,"^10",["^4",["^11","^15"]],"^M",49,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[[["~$x","~$y"]]]]]],"^R","Returns a rotation corresponding to a provided [x y] relative position."],"~$wrap-position",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",31,"^L",7,"^M",31,"^N",20,"^O",["^P",["^Q",["^P",[[["~$x","~$y"]]]]]],"^R","Returns the given coordinate if it refers to a position in the world. If not,\nthen this returns the coordinate resulting from wrapping the coordinate around\nthe world, assuming it is torroidal, so that the returned coordinate will indeed\nrefer to a position in the world."],"^5","~$pucks.util/wrap-position","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",20,"^T",["^P",[["~$p__5257"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",31,"^10","^19","^M",31,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[[["~$x","~$y"]]]]]],"^R","Returns the given coordinate if it refers to a position in the world. If not,\nthen this returns the coordinate resulting from wrapping the coordinate around\nthe world, assuming it is torroidal, so that the returned coordinate will indeed\nrefer to a position in the world."],"~$abbreviate-embedded-agents",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",121,"^L",7,"^M",121,"^N",33,"^O",["^P",["^Q",["^P",[["~$a"]]]]],"^R","Replaces embedded agents with {:abbrev (:id agent)}. This is indended\nfor use in printing agents, to keep the printed form readible and of reasonable\nsize."],"^5","~$pucks.util/abbreviate-embedded-agents","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",33,"^T",["^P",[["~$a"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",121,"^10","^11","^M",121,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[["~$a"]]]]],"^R","Replaces embedded agents with {:abbrev (:id agent)}. This is indended\nfor use in printing agents, to keep the printed form readible and of reasonable\nsize."],"~$print-stats",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",132,"^L",7,"^M",132,"^N",18,"^O",["^P",["^Q",["^P",[[]]]]]],"^5","~$pucks.util/print-stats","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",18,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",132,"^10","^11","^M",132,"^X",0,"^Y",true,"^O",["^P",["^Q",["^P",[[]]]]]],"~$clamp01",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",162,"^L",7,"^M",162,"^N",14,"^O",["^P",["^Q",["^P",[["~$n"]]]]],"^R","Returns number n if it is between 0.0 and 1.0, 0.0 if n is negative, and \n   1.0 if it is greater than 1.0."],"^5","~$pucks.util/clamp01","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",14,"^T",["^P",[["~$n"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",162,"^10",["^4",[null,"^15"]],"^M",162,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[["~$n"]]]]],"^R","Returns number n if it is between 0.0 and 1.0, 0.0 if n is negative, and \n   1.0 if it is greater than 1.0."],"~$rotation->relative-position",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",90,"^L",7,"^M",90,"^N",34,"^O",["^P",["^Q",["^P",[["^17"]]]]],"^R","Returns an [x y] relative position in the direction of the given rotation."],"^5","~$pucks.util/rotation->relative-position","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",34,"^T",["^P",[["^17"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",90,"^10","^19","^M",90,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[["^17"]]]]],"^R","Returns an [x y] relative position in the direction of the given rotation."],"~$objects-overlapping-xy",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",100,"^L",7,"^M",100,"^N",29,"^O",["^P",["^Q",["^P",[["~$x","~$y"]]]]],"^R","Returns a vector of all objects in the world that overlap the given \nposition."],"^5","~$pucks.util/objects-overlapping-xy","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",29,"^T",["^P",[["~$x","~$y"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",100,"^10","~$clj","^M",100,"^X",2,"^Y",true,"^O",["^P",["^Q",["^P",[["~$x","~$y"]]]]],"^R","Returns a vector of all objects in the world that overlap the given \nposition."],"~$pmapallv",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",138,"^L",7,"^M",138,"^N",15,"^O",["^P",["^Q",["^P",[["~$f","~$coll"]]]]],"^R","A utility for concurrent execution of a function on items in a collection.\nIn single-thread-mode this acts like mapv. Otherwise it acts like pmap but: \n1) coll should be finite, 2) the returned sequence will not be lazy, and will\nin fact be a vector, 3) calls to f may occur in any order, to maximize\nmulticore processor utilization, and 4) takes only one coll so far."],"^5","~$pucks.util/pmapallv","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",15,"^T",["^P",[["~$f","^1P"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",138,"^10","^11","^M",138,"^X",2,"^Y",true,"^O",["^P",["^Q",["^P",[["~$f","^1P"]]]]],"^R","A utility for concurrent execution of a function on items in a collection.\nIn single-thread-mode this acts like mapv. Otherwise it acts like pmap but: \n1) coll should be finite, 2) the returned sequence will not be lazy, and will\nin fact be a vector, 3) calls to f may occur in any order, to maximize\nmulticore processor utilization, and 4) takes only one coll so far."],"~$wrap-rotation",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",10,"^L",7,"^M",10,"^N",20,"^O",["^P",["^Q",["^P",[["~$r"]]]]],"^R","Wraps rotation angle r to -pi <= r <= pi"],"^5","~$pucks.util/wrap-rotation","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",20,"^T",["^P",[["~$r"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",10,"^10",["^4",[null,"^15"]],"^M",10,"^X",1,"^Y",true,"^O",["^P",["^Q",["^P",[["~$r"]]]]],"^R","Wraps rotation angle r to -pi <= r <= pi"],"~$remove-one",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",156,"^L",7,"^M",156,"^N",17,"^O",["^P",["^Q",["^P",[["~$item","~$s"]]]]],"^R","Returns sequence s without the first instance of item."],"^5","~$pucks.util/remove-one","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",17,"^T",["^P",[["^1U","~$s"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",156,"^10","^11","^M",156,"^X",2,"^Y",true,"^O",["^P",["^Q",["^P",[["^1U","~$s"]]]]],"^R","Returns sequence s without the first instance of item."],"~$rand-xy",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",109,"^L",7,"^M",109,"^N",14,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Returns a random [x y] where x and y can range from 0 (inclusive)\nto (:screen-size @pucks-settings) (exclusive)."],"^5","~$pucks.util/rand-xy","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",14,"^T",["^P",[[]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",109,"^10","^19","^M",109,"^X",0,"^Y",true,"^O",["^P",["^Q",["^P",[[]]]]],"^R","Returns a random [x y] where x and y can range from 0 (inclusive)\nto (:screen-size @pucks-settings) (exclusive)."],"~$rotational-difference",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",17,"^L",7,"^M",17,"^N",28,"^O",["^P",["^Q",["^P",[["~$rot1","~$rot2"]]]]],"^R","Returns the number of radians separating rot1 and rot2, the shortest way\naround."],"^5","~$pucks.util/rotational-difference","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",28,"^T",["^P",[["^1Z","^1["]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",17,"^10","^11","^M",17,"^X",2,"^Y",true,"^O",["^P",["^Q",["^P",[["^1Z","^1["]]]]],"^R","Returns the number of radians separating rot1 and rot2, the shortest way\naround."],"~$relativize-position",["^ ","^H",null,"^I",["^ ","^J","/Users/jfong/pucks/src/pucks/util.cljc","^K",62,"^L",7,"^M",62,"^N",26,"^O",["^P",["^Q",["^P",[["^1<","~$position"]]]]],"^R","Returns agent but will its position converted to be relative to the provided\nposition in a toroidal world."],"^5","~$pucks.util/relativize-position","^J","/Users/jfong/pucks/src/pucks/util.cljc","^N",26,"^T",["^P",[["^1<","^22"]]],"^U",null,"^V",["^P",[null,null]],"^L",1,"^W",false,"^K",62,"^10","^11","^M",62,"^X",2,"^Y",true,"^O",["^P",["^Q",["^P",[["^1<","^22"]]]]],"^R","Returns agent but will its position converted to be relative to the provided\nposition in a toroidal world."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:","^@","^:","^C","^A","^A","^A","^B","^A"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:spawn","~:else","~:sensed","~:abbrev","~:screen-size","~:radius","~:proposals","~:overlaps","~:id","~:position","~:neighbors"]],"~:order",["^29","^2<","^2A","^2=","^2B","^2;","^2@","^2:","^2?","^2>","^28"]],"^R",null]